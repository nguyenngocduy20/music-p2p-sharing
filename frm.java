/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;
import backend.Files;
import backend.AudioPlayer;
import backend.playback;
import backend.lstNode;
import backend.*;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sun.audio.*;
import java.io.*;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownHostException;
import java.awt.Dimension;
import java.applet.Applet;
import java.applet.AudioClip;
import java.awt.Color;
import java.awt.Component;
import javax.swing.table.DefaultTableModel;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JFrame;
import java.sql.*;
import javax.swing.Timer;

import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;
import javax.swing.JButton;
/**
 *
 * @author Deft Su
 */
public class frm extends javax.swing.JFrame {

    /**
     * Creates new form frm
     */
	int statebtnPlay = 0;   // = 0 not play
							// = 1 play
	int statebtnNext = 0;	// = 0 not click
							// = 1 click
	int statebtnTimKiem = 0;
	
	int statebtnDownload = 0;
	
	static receive rcv = new receive("RECEIVE");
	static Thread rcv_thrd  = new Thread(rcv);
	
    public frm(String []list) {
        initComponents();
        setValueTabBaiHat(list);
        setValueTabDownload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabBaiHat = new javax.swing.JTable(ListBaiHat);
        txtTuKhoa = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnTimKiem.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent arg0) {
        		statebtnTimKiem = 1;
        	}
        });
        jScrollPane2 = new javax.swing.JScrollPane();
        tabDownload = new javax.swing.JTable(ListDownload);
        btnPlay = new javax.swing.JButton();
        //btnPlay.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pause.png")));
        btnPause = btnPlay;
		btnPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pause.png")));
		btnPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });
        btnPlay.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) 
        	{
        		if(statebtnPlay == 0)
        		{
        			statebtnPlay = 1;
        		}
        		else
        		{
        			if(statebtnPlay == 1)
        			{
        				statebtnPlay = 0;
        			}
        		}
        	}
        });
        btnNext = new javax.swing.JButton();
        btnNext.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent arg0) 
        	{
        		statebtnNext = 1;
        	}
        });
        btnPev = new javax.swing.JButton();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        
        // tao socket receive mac dinh
        //rcv  = new receive("RECEIVE");
        //rcv_thrd = new Thread(rcv);
        rcv_thrd.start();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CHƯƠNG TRÌNH DOWNLOAD NHẠC");

        jLabel1.setText("Tên bài hát đang phát");
        jLabel2.setText("Ca sĩ");

        jScrollPane1.setViewportView(tabBaiHat);
        
        txtTuKhoa.setText("Nhập từ khóa cần tìm kiếm ở đây...");
        txtTuKhoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTuKhoaMouseClicked(evt);
            }
        });
        txtTuKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTuKhoaActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");        
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnTimKiemActionPerformed(evt);
					Thread.sleep(1000);
					refreshtabDownload(evt);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        
        /*
        tabDownload.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Tên bài hát", "Kích thước", "Trạng thái", "Tải về"
            }
        ));
        */
        jScrollPane2.setViewportView(tabDownload);

        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/play.png"))); // NOI18N
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        

        btnPev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/previous.png"))); // NOI18N
        btnPev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPevActionPerformed(evt);
            }
        });

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png"))); // NOI18N
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/remove.png"))); // NOI18N
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        
        JButton btnDownload = new JButton("Download");
        btnDownload.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		statebtnDownload = 1;
        	}
        });
        
        btnDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnDownloadActionPerformed(evt);
				} catch (UnknownHostException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(312)
        					.addComponent(add, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(remove, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
        					.addGap(0, 0, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.LEADING)
        								.addComponent(jLabel2)
        								.addComponent(jLabel1))
        							.addPreferredGap(ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
        							.addComponent(btnPev, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(btnPlay, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(btnNext, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE)
        							.addGap(19)))))
        			.addGap(56)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(txtTuKhoa, GroupLayout.PREFERRED_SIZE, 235, GroupLayout.PREFERRED_SIZE)
        					.addGap(27)
        					.addComponent(btnTimKiem))
        				.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 376, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnDownload))
        			.addGap(25))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(btnPev, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
        						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        							.addComponent(jLabel1)
        							.addComponent(txtTuKhoa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addComponent(btnTimKiem))
        						.addComponent(btnNext)))
        				.addComponent(btnPlay, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel2)
        				.addComponent(btnDownload))
        			.addGap(20)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
        				.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(add, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addGap(40))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(remove)
        					.addContainerGap(40, Short.MAX_VALUE))))
        );
        getContentPane().setLayout(layout);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

//    tabBaiHat.setModel(new javax.swing.table.DefaultTableModel(
//    new Object [][] {
//        {null, null}
//    },
//    new String [] {
//        "Tên bài hát", "Ca sĩ"
//    }
//));
    // Set gia tri cho cac dong cua tabBaiHat
    // Tham so dau vao la danh sach cac bai hat
    private void setValueTabBaiHat(String []list)
    {
        ListBaiHat.addColumn("Tên bài hát");
        ListBaiHat.addColumn("Ca sĩ");
        for (int i = 0; i < list.length; i++)
           ListBaiHat.addRow(new Object[]{list[i], null});
    }
    
    private boolean first_init = true;
    private void setValueTabDownload()
    {
    	if(first_init == true)
    	{
    		ListDownload.addColumn("Tên bài hát");
    		ListDownload.addColumn("Trạng thái");
    		ListDownload.addColumn("Tải về");
    		first_init = false;
    	}
    	
    	for(int i=0; i< ListDownload.getRowCount(); i++)
    	{
    		ListDownload.removeRow(0);
    	}
    	
    	for(int i= 0; i < rcv.v_avail.size(); i++)
    	{
    		ListDownload.addRow(new Object[]{rcv.v_avail.get(i).content, "Online", "Tải về"});
    	}
    }
    private void txtTuKhoaActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        txtTuKhoa.setText("");
    }                                         

    private void txtTuKhoaMouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        txtTuKhoa.setText("");
    }                                      

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                    
    
    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) throws UnknownHostException {                                         
        // TODO add your handling code here:
    	//if(statebtnDownload == 1)
    	{
    		int index = tabDownload.getSelectedRow();
    		System.out.println("Index: " + index);
    		String data = tabDownload.getValueAt(index, 0).toString();
    		System.out.println("Data: " + data);
    		for(int i=0; i< rcv.v_avail.size(); i++)
    		{
    			if(rcv.v_avail.get(i).content == data)
    			{
    				System.out.println("Send start to: " + rcv.v_avail.get(i).t_node.ip.substring(1, rcv.v_avail.get(i).t_node.ip.length()) + "\t" + rcv.v_avail.get(i).t_node.port);
    				send start = new send("Start", "start");
    						
    				// init ip dich, port dich
    				start.IpDest = InetAddress.getByName(rcv.v_avail.get(i).t_node.ip.substring(1, rcv.v_avail.get(i).t_node.ip.length()));
    				start.PortDest = rcv.v_avail.get(i).t_node.port;
    				
    				start.content = data;
    				System.out.println("Send start to: " + start.IpDest + "\t" + start.PortDest);
    				start.run();
    				//Thread mt = new Thread(start);
    				//mt.start();
    			}
    		}
    	}
    }             
    
    Player bck_playMP3;
    playback bck_pb;
    Thread bck_mt;
    int bck_index;
    int count =0;
    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
		try {
			int index = tabBaiHat.getSelectedRow();
			File currentDirectory = new File(new File(".").getAbsolutePath());
			String path = currentDirectory.getCanonicalPath();
			FileInputStream fis = new FileInputStream(path + "\\Music\\" + tabBaiHat.getValueAt(index, 0).toString());
			System.out.println(path + "\\Music\\" + tabBaiHat.getValueAt(index, 0).toString());
			Player playMP3 = new Player(fis);
			playback pb = new playback(false, playMP3);
			Thread mt = new Thread(pb);
			if(count%2 == 0)
			{
				bck_playMP3 = playMP3;
				bck_pb = pb;
				bck_mt = mt;
				bck_index = index;
			}
			else
			{
				playMP3 = bck_playMP3;
				pb = bck_pb;
				mt = bck_mt;
			}
	    	if(statebtnPlay == 0) // dang pause
	    	{
	    		//statebtnPlay = 1;
	    		btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pause.png")));
	    		jLabel1.setText(tabBaiHat.getValueAt(index, 0).toString().substring(0,  20) + "...");
	    		jLabel2.setText("");
	    		count++;
	    		mt.start();
	    		//playMP3.play();
	    		//btnPlay.setVisible(false);
	    		//btnPause.setVisible(true);
	    	}
	    	else
	    	{
	    		if(statebtnPlay == 1) // dang play
	    		{
	    			//statebtnPlay = 0;
		    		btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/play.png")));
		    		pb.isPlaying = true;
		    		count++;
		    		pb.playMP3.close();
		    		System.out.println("closing");
		    		//mt.start();
	    			//playMP3.close();
		    		//btnPlay.setVisible(true);
		    		//btnPause.setVisible(false);
	    		}
	    	}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JavaLayerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }           
    
    private void btnPauseActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }  

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    	count = 0;
    	System.out.println("set variable count to " + count);
    	statebtnPlay = 0;
    	bck_pb.playMP3.close();
    	try {
    		int index = bck_index + 1;
			File currentDirectory = new File(new File(".").getAbsolutePath());
			String path = currentDirectory.getCanonicalPath();
    		FileInputStream fis = new FileInputStream(path + "\\Music\\" + Files.listFile.get(index));
    		System.out.println(path + "\\Music\\" + tabBaiHat.getValueAt(index, 0).toString());
    		Player playMP3 = new Player(fis);
    		playback pb = new playback(false, playMP3);
    		Thread mt = new Thread(pb);
    		if(count%2 == 0)
    		{
    			bck_playMP3 = playMP3;
    			bck_pb = pb;
    			bck_mt = mt;
    			bck_index = index;
    		}
    		else
    		{
    			playMP3 = bck_playMP3;
    			pb = bck_pb;
    			mt = bck_mt;
    			index = bck_index;
    		}
    	    if(statebtnPlay == 0) // dang pause
    	   	{
    	   		//statebtnPlay = 1;
    	   		btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pause.png")));
    	   		jLabel1.setText(tabBaiHat.getValueAt(index, 0).toString().substring(0, 20) + "...");
    	   		jLabel2.setText("");
    	   		count++;
    	   		mt.start();
    	   		//playMP3.play();
    	   		//btnPlay.setVisible(false);
    	   		//btnPause.setVisible(true);
    	   	}
    	   	else
    	   	{
    	    	if(statebtnPlay == 1) // dang play
    	   		{
    	    		//statebtnPlay = 0;
    		    	btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/play.png")));
    		    	pb.isPlaying = true;
    		    	count++;
    		   		pb.playMP3.close();
    		   		System.out.println("closing");
    		   		statebtnPlay = 0;
    		   		//mt.start();
    	    		//playMP3.close();
    		   		//btnPlay.setVisible(true);
    		   		//btnPause.setVisible(false);
    	   		}
    	   	}
    	    if(statebtnPlay == 0)
    	    	statebtnPlay = 1;
    	} catch (FileNotFoundException e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    	} catch (JavaLayerException e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    	} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }                                        

    private void btnPevActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    	count = 0;
    	System.out.println("set variable count to " + count);
    	statebtnPlay = 0;
    	bck_pb.playMP3.close();
    	try {
    		int index = bck_index - 1;
			File currentDirectory = new File(new File(".").getAbsolutePath());
			String path = currentDirectory.getCanonicalPath();
    		FileInputStream fis = new FileInputStream(path + "\\Music\\" + Files.listFile.get(index));
    		System.out.println(path + "\\Music\\" + tabBaiHat.getValueAt(index, 0).toString());
    		Player playMP3 = new Player(fis);
    		playback pb = new playback(false, playMP3);
    		Thread mt = new Thread(pb);
    		if(count%2 == 0)
    		{
    			bck_playMP3 = playMP3;
    			bck_pb = pb;
    			bck_mt = mt;
    			bck_index = index;
    		}
    		else
    		{
    			playMP3 = bck_playMP3;
    			pb = bck_pb;
    			mt = bck_mt;
    			index = bck_index;
    		}
    	    if(statebtnPlay == 0) // dang pause
    	   	{
    	   		//statebtnPlay = 1;
    	   		btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pause.png")));
    	   		jLabel1.setText(tabBaiHat.getValueAt(index, 0).toString().substring(0, 20) + "...");
    	   		jLabel2.setText("");
    	   		count++;
    	   		mt.start();
    	   		//playMP3.play();
    	   		//btnPlay.setVisible(false);
    	   		//btnPause.setVisible(true);
    	   	}
    	   	else
    	   	{
    	    	if(statebtnPlay == 1) // dang play
    	   		{
    	    		//statebtnPlay = 0;
    		    	btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/play.png")));
    		    	pb.isPlaying = true;
    		    	count++;
    		   		pb.playMP3.close();
    		   		System.out.println("closing");
    		   		statebtnPlay = 0;
    		   		//mt.start();
    	    		//playMP3.close();
    		   		//btnPlay.setVisible(true);
    		   		//btnPause.setVisible(false);
    	   		}
    	   	}
    	    if(statebtnPlay == 0)
    	    	statebtnPlay = 1;
    	} catch (FileNotFoundException e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    	} catch (JavaLayerException e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    	} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }                                       

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    
	private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) throws InterruptedException
    {
    	//if(statebtnTimKiem == 1)
    	{
    		String key = txtTuKhoa.getText();
    		System.out.println("Keyword: " + key);
    		// gui request
    		send snd_req = new send("request", "req");
    		snd_req.content = key;
    		//Thread snd_thrd = new Thread(snd_req);
    		//snd_thrd.start();
    		snd_req.run();
    		
    		if(rcv_thrd.isAlive() == true)
    		{
				System.out.println("Thread RECEIVE is still alive");
    			setValueTabDownload();
    		}
    		else
    		{
				System.out.println("Thread RECEIVE died");
				//rcv_thrd.interrupt();
    			//rcv_thrd.start();
				System.out.println("Thread RECEIVE start again");
    			setValueTabDownload();
    		}
    	}
    }
    public void refreshtabDownload(java.awt.event.ActionEvent evt)
    {
    	System.out.println("Refresh tabDownload");
    	setValueTabDownload();
    	tabDownload.repaint();
    }
    /**
     * @param args the command line arguments
     */
    
    // Dung de tao danh sach file mp3 tu duong dan
    public static void CreateListSong(String []list)
    {
        String []Parts;
        
         for (int i = 0; i < Files.listFile.size(); i++)
         {
             // Cat chuoi duong dan ra cac phan roi lay phan cuoi la ten bai hat
             Parts = Files.listFile.get(i).split("[/]");
             list[i] = Parts[Parts.length - 1];
         }
    }
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Files.ReadFileInFolder();
        String []list = new String[Files.listFile.size()];
        CreateListSong(list);
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frm giaodien = new frm(list);
                giaodien.setVisible(true);
            }
        });
    }

    private DefaultTableModel ListBaiHat = new DefaultTableModel();
    private DefaultTableModel ListDownload = new DefaultTableModel();
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPev;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton add;
    private javax.swing.JButton remove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabDownload;
    private javax.swing.JTable tabBaiHat;
    private javax.swing.JTextField txtTuKhoa;
}
